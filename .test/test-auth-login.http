###

POST {{HTTP_HOST}}/auth/login
Accept: application/json
X-Test-Uid: {{ X_TEST_UID }}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
client.global.set("auth_token", response.body.token);
%}

###

POST {{HTTP_HOST}}/auth/login
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 404, "Response status is not 404");
});
%}

###

POST {{HTTP_HOST}}/graphql
Accept-Encoding: gzip, deflate, br
Accept: application/json
Connection: keep-alive
DNT: 1
Origin: http://localhost:3000
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{"query":"query CurrentUser {  currentUser { uid email name role }}"}