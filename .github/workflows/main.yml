name: Server Build & Push

on:
  push:
    branches:
      - develop
    paths:
      - 'graphql-app/**'
      - docker-compose.prod.yml
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    types: [ closed ]

jobs:
  build:
    name: Build integrated app
    runs-on: ubuntu-latest
    env:
      FIREBASE_CRED_DIR: ./graphql-app/src/.private
      FIREBASE_CRED_PATH: ./graphql-app/src/.private/firebase-credentials.json
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Create env file & credential files
        run: |
          mkdir -p $FIREBASE_CRED_DIR
          touch $FIREBASE_CRED_PATH
          echo '${{ secrets.FIREBASE_CREDS }}' > $FIREBASE_CRED_PATH

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Authenticate with DO Container Registry
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Login to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      # Push to DO Container Registry
      - name: Push to DO Container Registry
        uses: docker/build-push-action@v2
        with:
          context: graphql-app
          push: true
          target: production
          tags: registry.digitalocean.com/vaithuhay-solutions/vth-graphql-app-prod:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Revalidate cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy_preview:
    environment: preview
    name: Deploy integrated app to VPS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Copy docker-compose.prod.yml
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yml,.data/init-letsencrypt.sh,.data/**/*,.scripts/**/*"
          target: "/home/vth-showcase"
      - name: Restart docker compose
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/vth-showcase
            touch .env.staging
            echo "${{ secrets.SERVER_ENV }}" > .env.staging
            docker-compose -f docker-compose.prod.yml pull
            cd .scripts
            chmod +x reload.sh
            ./reload.sh staging nginx