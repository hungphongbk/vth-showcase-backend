name: Server Build & Push

on:
  push:
    branches: [ main ]
    paths:
      - 'graphql-app/**'
      - docker-compose.prod.yml
      - '.github/workflows/**'

jobs:
  build:
    name: Build integrated app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.SERVER_ENV_PROD }}" > .env
          cat .env

      - name: Build image
        run: docker compose -f docker-compose.prod.yml build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Push image to DO Container Registry
        run: |
          doctl registry login --expiry-seconds 600
          docker compose -f docker-compose.prod.yml push

  deploy:
    name: Deploy integrated app to VPS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Stack
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: root@137.184.250.143
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          deploy_path: /home/vth-showcase
          args: up -d
          stack_file_name: docker-compose.prod.yml
          pull_images_first: true
