# Just trigger new host
name: Server Build & Deploy to Kubernetes

on:
  push:
    branches:
      - '*'
      - '!master'
    paths:
      - 'graphql-app/**'
      - 'upload-app/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    types: [ closed ]

env:
  REGISTRY: ghcr.io

jobs:
  build-app:
    name: Build integrated app
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKERX_CACHE_PREFIX: /tmp/.buildx-cache-graphql
      IMAGE_NAME: ${{ github.repository }}
      FIREBASE_CRED_DIR: ./graphql-app/main/src.private
      FIREBASE_CRED_PATH: ./graphql-app/main/src.private/firebase-credentials.json
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Create env file & credential files
        run: |
          mkdir -p $FIREBASE_CRED_DIR
          touch $FIREBASE_CRED_PATH
          echo '${{ secrets.FIREBASE_CREDS }}' > $FIREBASE_CRED_PATH

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ${{ env.DOCKERX_CACHE_PREFIX }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Authenticate with Github Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: graphql-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=${{ env.DOCKERX_CACHE_PREFIX }}
          cache-to: type=local,dest=${{ env.DOCKERX_CACHE_PREFIX }}-new

      - name: Revalidate cache
        run: |
          rm -rf ${{ env.DOCKERX_CACHE_PREFIX }}
          mv ${{ env.DOCKERX_CACHE_PREFIX }}-new ${{ env.DOCKERX_CACHE_PREFIX }}

  build-upload:
    name: Build upload server
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ${{ github.repository_owner }}/upload-server
      DOCKERX_CACHE_PREFIX: /tmp/.buildx-cache-upload
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      # Setup cache
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ${{ env.DOCKERX_CACHE_PREFIX }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Authenticate with Github Container Registry
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: upload-app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=${{ env.DOCKERX_CACHE_PREFIX }}
          cache-to: type=local,dest=${{ env.DOCKERX_CACHE_PREFIX }}-new

      - name: Revalidate cache
        run: |
          rm -rf ${{ env.DOCKERX_CACHE_PREFIX }}
          mv ${{ env.DOCKERX_CACHE_PREFIX }}-new ${{ env.DOCKERX_CACHE_PREFIX }}

  deploy_preview:
    name: Deploy integrated app to VPS
    if: github.ref == 'refs/heads/develop'
    needs:
      - build-app
      - build-upload
    uses: hungphongbk/vth-showcase-backend/.github/workflows/deployment.yml@develop
    with:
      deployment_name: showcase
      namespace: staging
      environment: preview
    secrets:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      GH_DEPLOYMENT_PAT: ${{ secrets.GH_DEPLOYMENT_PAT }}
